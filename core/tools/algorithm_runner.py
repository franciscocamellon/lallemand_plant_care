# -*- coding: utf-8 -*-
"""
/***************************************************************************
 GeostatisticsTrial
                                 A QGIS plugin
 Lallemand Plant Care
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2023-10-04
        git sha              : $Format:%H$
        copyright            : (C) 2023 by CamellOnCase
        email                : camelloncase@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import processing

from qgis.core import QgsCoordinateReferenceSystem, QgsProject
from qgis.PyQt.Qt import QObject


class AlgorithmRunner(QObject):

    def __init__(self):
        super(AlgorithmRunner, self).__init__()
        pass

    @staticmethod
    def runWaypointsPolygonsBuilder(layer, method, sorting, sizeBorder, context=None, feedback=None, outputLayer=None):
        outputLayer = 'memory:' if outputLayer is None else outputLayer
        parameters = {
            'Waypoints': layer,
            'Initial_Projection': 0,
            'Reprojection': 0,
            'Methode': method,
            'Variable_ordonnee': sorting,
            'Size_border': sizeBorder,
            'Polygones_traitement': outputLayer
        }
        output = processing.run('r:Waypoints_Polygons_builder_v3_border', parameters, context=context, feedback=feedback)
        return output['Polygones_traitement']

    @staticmethod
    def runReprojectLayer(layer, targetCrs, operation=None, context=None, feedback=None, outputLayer=None):
        outputLayer = 'memory:' if outputLayer is None else outputLayer
        parameters = {
            'INPUT': layer, 'TARGET_CRS': QgsCoordinateReferenceSystem(targetCrs),
            'OPERATION': operation, 'OUTPUT': outputLayer
        }
        output = processing.run('native:reprojectlayer', parameters, context=context, feedback=feedback)

        return output['OUTPUT']
